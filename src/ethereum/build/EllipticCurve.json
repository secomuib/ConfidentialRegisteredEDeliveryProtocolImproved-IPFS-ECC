{
  "abi": [],
  "devdoc": {
    "author": "Witnet Foundation",
    "details": "Library providing arithmetic operations over elliptic curves. This library does not check whether the inserted points belong to the curve `isOnCurve` function should be used by the library user to check the aforementioned statement.",
    "kind": "dev",
    "methods": {},
    "title": "Elliptic Curve Library",
    "version": 1
  },
  "evm": {
    "assembly": "    /* \"ConfidentialMultipartyRegisteredEDeliveryWithoutTTP.sol\":351:12134  library EllipticCurve {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ConfidentialMultipartyRegisteredEDeliveryWithoutTTP.sol\":351:12134  library EllipticCurve {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209c15c54e61ca62cc55831dd29b9b66752000ca6fa8ae6b27caf03ec3e89f7e0464736f6c634300060c0033\n}\n",
    "bytecode": {
      "linkReferences": {},
      "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c15c54e61ca62cc55831dd29b9b66752000ca6fa8ae6b27caf03ec3e89f7e0464736f6c634300060c0033",
      "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 ISZERO 0xC5 0x4E PUSH2 0xCA62 0xCC SSTORE DUP4 SAR 0xD2 SWAP12 SWAP12 PUSH7 0x752000CA6FA8AE PUSH12 0x27CAF03EC3E89F7E0464736F PUSH13 0x634300060C0033000000000000 ",
      "sourceMap": "351:11783:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "immutableReferences": {},
      "linkReferences": {},
      "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209c15c54e61ca62cc55831dd29b9b66752000ca6fa8ae6b27caf03ec3e89f7e0464736f6c634300060c0033",
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 ISZERO 0xC5 0x4E PUSH2 0xCA62 0xCC SSTORE DUP4 SAR 0xD2 SWAP12 SWAP12 PUSH7 0x752000CA6FA8AE PUSH12 0x27CAF03EC3E89F7E0464736F PUSH13 0x634300060C0033000000000000 ",
      "sourceMap": "351:11783:0:-:0;;;;;;;;"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "17200",
        "executionCost": "97",
        "totalCost": "17297"
      },
      "internal": {
        "deriveY(uint8,uint256,uint256,uint256,uint256)": "infinite",
        "ecAdd(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
        "ecInv(uint256,uint256,uint256)": "infinite",
        "ecMul(uint256,uint256,uint256,uint256,uint256)": "infinite",
        "ecSub(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
        "expMod(uint256,uint256,uint256)": "infinite",
        "invMod(uint256,uint256)": "infinite",
        "isOnCurve(uint256,uint256,uint256,uint256,uint256)": "infinite",
        "jacAdd(uint256,uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
        "jacDouble(uint256,uint256,uint256,uint256,uint256)": "infinite",
        "jacMul(uint256,uint256,uint256,uint256,uint256,uint256)": "infinite",
        "toAffine(uint256,uint256,uint256,uint256)": "infinite"
      }
    },
    "legacyAssembly": {
      ".code": [
        {
          "begin": 351,
          "end": 12134,
          "name": "PUSH #[$]",
          "source": 0,
          "value": "0000000000000000000000000000000000000000000000000000000000000000"
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "PUSH [$]",
          "source": 0,
          "value": "0000000000000000000000000000000000000000000000000000000000000000"
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "PUSH",
          "source": 0,
          "value": "B"
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "DUP3",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "DUP3",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "DUP3",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "CODECOPY",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "DUP1",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "MLOAD",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "PUSH",
          "source": 0,
          "value": "0"
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "BYTE",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "PUSH",
          "source": 0,
          "value": "73"
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "EQ",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "PUSH [tag]",
          "source": 0,
          "value": "1"
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "JUMPI",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "INVALID",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "tag",
          "source": 0,
          "value": "1"
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "JUMPDEST",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "ADDRESS",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "PUSH",
          "source": 0,
          "value": "0"
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "MSTORE",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "PUSH",
          "source": 0,
          "value": "73"
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "DUP2",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "MSTORE8",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "DUP3",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "DUP2",
          "source": 0
        },
        {
          "begin": 351,
          "end": 12134,
          "name": "RETURN",
          "source": 0
        }
      ],
      ".data": {
        "0": {
          ".auxdata": "a26469706673582212209c15c54e61ca62cc55831dd29b9b66752000ca6fa8ae6b27caf03ec3e89f7e0464736f6c634300060c0033",
          ".code": [
            {
              "begin": 351,
              "end": 12134,
              "name": "PUSHDEPLOYADDRESS",
              "source": 0
            },
            {
              "begin": 351,
              "end": 12134,
              "name": "ADDRESS",
              "source": 0
            },
            {
              "begin": 351,
              "end": 12134,
              "name": "EQ",
              "source": 0
            },
            {
              "begin": 351,
              "end": 12134,
              "name": "PUSH",
              "source": 0,
              "value": "80"
            },
            {
              "begin": 351,
              "end": 12134,
              "name": "PUSH",
              "source": 0,
              "value": "40"
            },
            {
              "begin": 351,
              "end": 12134,
              "name": "MSTORE",
              "source": 0
            },
            {
              "begin": 351,
              "end": 12134,
              "name": "PUSH",
              "source": 0,
              "value": "0"
            },
            {
              "begin": 351,
              "end": 12134,
              "name": "DUP1",
              "source": 0
            },
            {
              "begin": 351,
              "end": 12134,
              "name": "REVERT",
              "source": 0
            }
          ]
        }
      }
    },
    "methodIdentifiers": {}
  },
  "ewasm": {
    "wasm": ""
  },
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Witnet Foundation\",\"details\":\"Library providing arithmetic operations over elliptic curves. This library does not check whether the inserted points belong to the curve `isOnCurve` function should be used by the library user to check the aforementioned statement.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Elliptic Curve Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ConfidentialMultipartyRegisteredEDeliveryWithoutTTP.sol\":\"EllipticCurve\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ConfidentialMultipartyRegisteredEDeliveryWithoutTTP.sol\":{\"keccak256\":\"0x452c4dfd926cd9df00af0cbc4af5773808156070b4743644a30545efe17d2865\",\"urls\":[\"bzz-raw://e070a0193d14465d25d81b83fa6ccadab8c38c915e421c867ee340494dd8c10e\",\"dweb:/ipfs/QmQ76SH1LkJtnbPDEgPK1vVCHyYv84ysBoFAeifmzcyYGq\"]}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
